\" Generated by script2man from auto-gen-get-set
.TH auto-gen-get-set 1

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.PP
.nf 
.na
auto-gen-get-set file.h lib-flags return-value-prefix [header-subdir]
.ad
.fi

.SH ARGUMENTS
.nf
.na
file.h              Header file containing the structure def
lib-flags           -l flags required for linking with the library
return-value-prefix Prefix on constants returned by mutator functions
header-subdir/      Optional subdirectory under PREFIX/include
.ad
.fi

.SH DESCRIPTION

auto-gen-get-set generates get (accessor) macros
and set (mutator) functions for each structure in the header file
file.h.

It also runs auto-c2man to generate man pages for each macro and function.

lib-flags (e.g. -lbiolibc) indicate the require library for the class
and are included in the synopsis of each man page.

The constants ${PREFIX}DATA_OK and ${PREFIX}DATA_OUT_OF_RANGE are defined,
where PREFIX is taken from the third command-line argument.

If header files are installed in a subdirectory under PREFIX/include,
then the relative subdirectory path must be specified as the fourth argument.
E.g. if headers are installed under PREFIX/include/biolibc, then the fourth
argument should be "biolibc".

Range can be specified for numeric fields using an inline comment of the
form "// aggs:low:high".  If provided, a range check is inserted into
mutator functions, which return <PREFIX>OUT_OF_RANGE if the check fails.

.SH EXAMPLES
Given the following structure defined in trim.h:

.nf
.na
typedef struct
{
    ...
    unsigned    min_qual;   // aggs:1:60
    ...
}   trim_t;
.ad
.fi

and the following command to generate accessors and mutators:

.nf
.na
auto-gen-get-set trim.h '-ltrim -lbiolibc' TRIM_ trim
.ad
.fi

.B auto-gen-get-set
will generate the following accessor macro and mutator function:

.nf
.na
#define TRIM_MIN_QUAL(ptr)              ((ptr)->min_qual)

/***********************************************************************
 *  Library:
 *      #include <trim.h>
 *      -ltrim
 *
 *  Description:
 *      Mutator for min_qual member in a trim_t structure.
 *      Use this function to set min_qual in a trim_t variable
 *      from non-member functions.  This function performs a direct
 *      assignment for scalar or pointer structure members.  If
 *      min_qual is a pointer, data previously pointed to should
 *      generally be freed before calling this function to avoid memory
 *      leaks.
 *
 *      Note that there is an equivalent macro (), which performs
 *      this function with no data verification or call overhead.
 *      Use the macro version to maximize performance where the validity
 *      of new_min_qual is guaranteed by other means.
 *      
 *
 *  Arguments:
 *      trim_ptr        Pointer to the structure to set
 *      new_min_qual    The new value for min_qual
 *
 *  Returns:
 *      TRIM_DATA_OK if the new value is acceptable and assigned
 *      TRIM_DATA_OUT_OF_RANGE otherwise
 *
 *  Examples:
 *      trim_t          trim;
 *      unsigned        new_min_qual;
 *
 *      if ( trim_set_min_qual(&trim, new_min_qual) == TRIM_DATA_OK )
 *      {
 *      }
 *
 *  See also:
 *      (3)
 *
 *  History: 
 *  Date        Name        Modification
 *  2022-01-15  gen-get-set Auto-generated from trim.h
 ***********************************************************************/

int     trim_set_min_qual(trim_t *trim_ptr, unsigned new_min_qual)

{
    if ( (new_min_qual < 1) || (new_min_qual > 60) )
	   return TRIM_DATA_OUT_OF_RANGE;
    else
    {
	   trim_ptr->min_qual = new_min_qual;
	   return TRIM_DATA_OK;
    }
}
.ad
.fi

.SH SEE ALSO

auto-c2man(1), auto-script2man(1)

