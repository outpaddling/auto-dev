#!/bin/sh -e

##########################################################################
#   Synopsis:
#       auto-c2man file.c
#       
#   Description:
#       Generate man pages for all functions in a C source file.
#       Above each function to be documented, there must be a block
#       comment containining all the sections of the man page.  Each
#       of the following must be present on a separate line:
#
#       *   Description:
#
#       Multiple lines of text explaining the function here
#
#       Optional sections include:
#
#       *   Examples:
#       
#       Multiple lines of verbatim text showing examples
#
#       *   Files:
#       
#       Multiple lines of text explaining relevant files
#
#       *   Environment:
#       
#       Multiple lines of text explaining relevant environment vars
#
#       *   See also:
#       
#       Multiple lines of text listing related functions and commands
#
#   Arguments:
#       file.c      C source file containing library functions to document
#
#   Returns:
#       0 on success, non-zero error codes otherwise
#
#   Examples:
#       auto-c2man file.c
#
#   See also:
#       auto-script2man(1), auto-gen-get-set(1)
#
#   History:
#   Date        Name        Modification
#   2021-04-23  Jason Bacon Begin
##########################################################################

usage()
{
    printf "Usage: $0 source-file\n"
    exit 1
}


##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}


##########################################################################
#   Function description:
#       Generate a man page for the next function found
#       
#   History:
#   Date        Name        Modification
#   2021-04-23  Jason Bacon Begin
##########################################################################

gen_page()
{
    FILE_LIST="$FILE_LIST Temp-man/$name.3"
    cat << EOM > Temp-man/$name.3
\" Generated by c2man from $name.c
.TH $name 3

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
$(cat c2man-library)
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.PP
$(cat c2man-synopsis)

.SH ARGUMENTS
.nf
.na
$(cat c2man-arguments)
.ad
.fi

.SH DESCRIPTION
$(cat c2man-description)
EOM

    if [ -e c2man-returns ]; then
	cat << EOM >> Temp-man/$name.3

.SH RETURN VALUES
$(cat c2man-returns)
EOM
    fi
    
    if [ -e c2man-examples ]; then
	cat << EOM >> Temp-man/$name.3

.SH EXAMPLES
.nf
.na
$(cat c2man-examples)
.ad
.fi
EOM
    fi
    
    if [ -e c2man-files ]; then
	cat << EOM >> Temp-man/$name.3

.SH FILES
$(cat c2man-files)
EOM
    fi

    if [ -e c2man-env ]; then
	cat << EOM >> Temp-man/$name.3

.SH ENVIRONMENT
$(cat c2man-env)
EOM
    fi
    
    if [ -e c2man-see-also ]; then
	cat << EOM >> Temp-man/$name.3

.SH SEE ALSO
$(cat c2man-see-also)

EOM
    fi
    return
}


##########################################################################
#   Main
##########################################################################

if [ $# -lt 1 ]; then
    usage
fi

mkdir -p Temp-man
rm -f c2man-*
for source_file in "$@"; do
    printf "Parsing $source_file...\n"
    
    mode=ignore
    function_comment=n
    my_tty=$(tty)
    
    while read line; do
	if printf "%s\n" "$line" | grep -q '\*/$' && [ $function_comment = y ]; then
	    mode=synopsis
	    line=''
	# A Library: line is required          
	elif printf "%s\n" "$line" | grep -q '[ ]*\*[ ]*Library:'; then
	    mode=library
	    line=''
	    function_comment=y
	elif printf "%s\n" "$line" | grep -q '[ ]*\*[ ]*Description:'; then
	    mode=description
	    line=''
	elif printf "%s\n" "$line" | grep -q '[ ]*\*[ ]*Arguments:'; then
	    mode=arguments
	    line=''
	elif printf "%s\n" "$line" | grep -q '[ ]*\*[ ]*Returns'; then
	    mode=returns
	    line=''
	elif printf "%s\n" "$line" | grep -q '[ ]*\*[ ]*Examples:'; then
	    mode=examples
	    line=''
	elif printf "%s\n" "$line" | grep -q '[ ]*\*[ ]*Files:'; then
	    mode=files
	    line=''
	elif printf "%s\n" "$line" | grep -q '[ ]*\*[ ]*Environment:'; then
	    mode=env
	    line=''
	elif printf "%s\n" "$line" | grep -q '[ ]*\*[ ]*See also:'; then
	    mode=see-also
	    line=''
	elif printf "%s\n" "$line" | grep -q '[ ]*\*[ ]*History'; then
	    mode=ignore
	    line=''
	elif printf "%s\n" "$line" | grep -q '^[ \t]*{$' && [ $function_comment = y ]; then
	    mode=ignore
	    gen_page
	    function_comment=n
	    rm c2man-*
	fi
    
	case $mode in
	library)
	    line=$(printf "%s\n" "$line" | sed -e 's|^ *[*] *||')
	    if [ ! -z "$line" ]; then
		printf "%s\n" "$line" >> c2man-library
	    fi
	    ;;
	    
	description)
	    line=$(printf "%s\n" "$line" | sed -e 's|^ *[*] *||')
	    printf "%s\n" "$line" >> c2man-description
	    ;;
	    
	arguments)
	    line=$(printf "%s\n" "$line" | sed -e 's|^ *[*] *||')
	    if [ ! -z "$line" ]; then
		printf "%s\n" "$line" >> c2man-arguments
	    fi
	    ;;
	    
	returns)
	    line=$(printf "%s\n" "$line" | sed -e 's|^ *[*] *||')
	    printf "%s\n" "$line" >> c2man-returns
	    ;;
	    
	examples)
	    line=$(printf "%s\n" "$line" | sed -e 's|^ *[*]      ||')
	    line=$(printf "%s\n" "$line" | sed -e 's|^ *[*] *$||')
	    printf "%s\n" "$line" >> c2man-examples
	    ;;
	    
	files)
	    line=$(printf "%s\n" "$line" | sed -e 's|^ *[*] *||')
	    printf "%s\n" "$line" >> c2man-files
	    ;;
	    
	env)
	    line=$(printf "%s\n" "$line" | sed -e 's|^ *[*] *||')
	    printf "%s\n" "$line" >> c2man-env
	    ;;
	    
	see-also)
	    line=$(printf "%s\n" "$line" | sed -e 's|^ *[*] *||')
	    printf "%s\n" "$line" >> c2man-see-also
	    ;;
	    
	history)
	    ;;
	    
	synopsis)
	    if printf "%s\n" "$line" | grep -q '[!-~]'; then
		if printf "%s\n" "$line" | egrep -q '^[A-Za-z_]+.*\('; then
		    type_and_name=$(printf "%s\n" "$line" | awk -F '\\(' '{ print $1 }')
		    name=$(printf "$type_and_name\n" | awk -F '[ \t\*]*' '{ print $NF }')
		    printf "%s\n" "$line" >> c2man-synopsis
		else
		    printf "%s\n" "$line" >> c2man-synopsis
		fi
	    fi
	    ;;
	    
	*)
	    ;;
	    
	esac
    done < $source_file
done

ape $FILE_LIST
